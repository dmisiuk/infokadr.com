<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <context:annotation-config/>
    <!--<context:component-scan base-package="by.academy.shop.web.command"/>-->

    <!--<bean id="service" class="by.academy.shop.service.ServiceImpl">-->
        <!--<property name="productDao" ref="productDao"/>-->
        <!--<property name="orderDao" ref="orderDao"/>-->
    <!--</bean>-->

    <!--<bean id="productDao" class="by.academy.dao.DaoImpl">-->
        <!--<constructor-arg>-->
            <!--<value>com.infokadr.domain.Film</value>-->
        <!--</constructor-arg>-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->

    <!--<bean id="orderDao" class="by.academy.shop.DaoImpl">-->
        <!--<constructor-arg>-->
            <!--<value>com.infokadr.domain.Trailer</value>-->
        <!--</constructor-arg>-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->

    <!-- Hibernate session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>

        <!--<property name="namingStrategy">-->
            <!--<bean class="com.infokadr.util.InfokadrNamingStrategy"/>-->
        <!--</property>-->

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.connection.pool_size">10</prop>
                <prop key="show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>

        <property name="packagesToScan" value="com.infokadr.domain"/>

    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/infokadr"/>
        <property name="username" value="root"/>
        <property name="password" value="1234567"/>
    </bean>

    <!--bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> <property name="location"> <value>WEB-INF/classes/config/database/db.properties</value>
  </property> </bean -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="ServiceException"/>
        </tx:attributes>
    </tx:advice>

    <!--<aop:config>-->
        <!--<aop:advisor pointcut="execution(* by.academy.shop.service.ServiceImpl.*(..))" advice-ref="txAdvice"/>-->
    <!--</aop:config>-->

</beans>
